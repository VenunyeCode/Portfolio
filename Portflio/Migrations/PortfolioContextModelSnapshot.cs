// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portflio.MyContext;

#nullable disable

namespace Portflio.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    partial class PortfolioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Portflio.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlatFormLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("Portflio.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TechnologyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("ProjectTypeId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Portflio.Models.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LabelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LabelType = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            LabelType = "Web"
                        });
                });

            modelBuilder.Entity("Portflio.Models.Technology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TechnoLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TechnoLabel = "HTML/CSS/JS"
                        },
                        new
                        {
                            Id = 2,
                            TechnoLabel = "JAVA"
                        },
                        new
                        {
                            Id = 3,
                            TechnoLabel = "CSharp"
                        },
                        new
                        {
                            Id = 4,
                            TechnoLabel = ".NET"
                        },
                        new
                        {
                            Id = 5,
                            TechnoLabel = "Bootstrap"
                        },
                        new
                        {
                            Id = 6,
                            TechnoLabel = "React.JS"
                        },
                        new
                        {
                            Id = 7,
                            TechnoLabel = "Angular"
                        },
                        new
                        {
                            Id = 8,
                            TechnoLabel = "SQL Server"
                        },
                        new
                        {
                            Id = 9,
                            TechnoLabel = "MySQL"
                        },
                        new
                        {
                            Id = 10,
                            TechnoLabel = "PostgreSQL"
                        });
                });

            modelBuilder.Entity("Portflio.Models.Project", b =>
                {
                    b.HasOne("Portflio.Models.Platform", null)
                        .WithMany("Projects")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portflio.Models.ProjectType", null)
                        .WithMany("Projects")
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portflio.Models.Technology", null)
                        .WithMany("Projects")
                        .HasForeignKey("TechnologyId");
                });

            modelBuilder.Entity("Portflio.Models.Platform", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Portflio.Models.ProjectType", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Portflio.Models.Technology", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
